name: Build branch
on:
  workflow_dispatch:

env:
  APTABASE_KEY: ${{ secrets.APTABASE_KEY }}

jobs:
  publish-tauri:
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Setup pnpm 7
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Download DLLs
        shell: pwsh
        run: |
          $accessToken = "${{ secrets.DLL_TOKEN }}"
          ./src-client-mod/download-dll.ps1 -url "https://raw.githubusercontent.com/angel-git/tarkov-stash-dll/master/dependencies/0Harmony.dll" -outputPath ".\src-client-mod\dependencies\0Harmony.dll" -accessToken $accessToken
          ./src-client-mod/download-dll.ps1 -url "https://raw.githubusercontent.com/angel-git/tarkov-stash-dll/master/dependencies/Aki.Reflection.dll" -outputPath ".\src-client-mod\dependencies\Aki.Reflection.dll" -accessToken $accessToken
          ./src-client-mod/download-dll.ps1 -url "https://raw.githubusercontent.com/angel-git/tarkov-stash-dll/master/dependencies/Assembly-CSharp.dll" -outputPath ".\src-client-mod\dependencies\Assembly-CSharp.dll" -accessToken $accessToken
          ./src-client-mod/download-dll.ps1 -url "https://raw.githubusercontent.com/angel-git/tarkov-stash-dll/master/dependencies/BepInEx.dll" -outputPath ".\src-client-mod\dependencies\BepInEx.dll" -accessToken $accessToken
          ./src-client-mod/download-dll.ps1 -url "https://raw.githubusercontent.com/angel-git/tarkov-stash-dll/master/dependencies/Comfort.dll" -outputPath ".\src-client-mod\dependencies\Comfort.dll" -accessToken $accessToken
          ./src-client-mod/download-dll.ps1 -url "https://raw.githubusercontent.com/angel-git/tarkov-stash-dll/master/dependencies/Comfort.Unity.dll" -outputPath ".\src-client-mod\dependencies\Comfort.Unity.dll" -accessToken $accessToken
          ./src-client-mod/download-dll.ps1 -url "https://raw.githubusercontent.com/angel-git/tarkov-stash-dll/master/dependencies/Sirenix.Serialization.dll" -outputPath ".\src-client-mod\dependencies\Sirenix.Serialization.dll" -accessToken $accessToken
          ./src-client-mod/download-dll.ps1 -url "https://raw.githubusercontent.com/angel-git/tarkov-stash-dll/master/dependencies/UnityEngine.CoreModule.dll" -outputPath ".\src-client-mod\dependencies\UnityEngine.CoreModule.dll" -accessToken $accessToken
          ./src-client-mod/download-dll.ps1 -url "https://raw.githubusercontent.com/angel-git/tarkov-stash-dll/master/dependencies/UnityEngine.dll" -outputPath ".\src-client-mod\dependencies\UnityEngine.dll" -accessToken $accessToken
        env:
          DLL_TOKEN: ${{ secrets.DLL_TOKEN }}
      - name: Setup dotnet
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      - name: Build
        run: dotnet build tarkov-stash-client.sln
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install frontend dependencies
        run: pnpm install
      - name: Build Portable Binaries (Windows)
        run: |
          pnpm tauri build
          mkdir "dist/user/mods/tarkov-stash-${{ github.sha }}"
          xcopy .\src-spt-mod .\dist\user\mods\tarkov-stash-${{ github.sha }} /e
          Remove-Item -Path .\dist\user\mods\tarkov-stash-${{ github.sha }}\types -Force -Recurse
          mv ./src-tauri/target/release/tarkov-stash.exe ./dist/user/mods/tarkov-stash-${{ github.sha }}/tarkov-stash-${{ github.sha }}_x64-portable.exe
          Compress-Archive -Path ./dist/* -Destination ./tarkov-stash-${{ github.sha }}.zip
      - uses: actions/upload-artifact@v4
        with:
          name: tarkov-stash
          path: ./tarkov-stash-${{ github.sha }}.zip
